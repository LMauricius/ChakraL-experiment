# fpub, fprot, fpriv - member functions
#   fpub <FUNCTION_NAME>(<PARAMETERS>) -> <RETURN_TYPE>
# vpub, vprot, vpriv - member variables
#   vpub <VARIABLE_NAME> -> <TYPE>
# cpub, cprot, cpriv - cached member variables (functions + variables)
#   cpub <FUNCTION_NAME>(<PARAMETERS>) -> <RETURN_TYPE>
#   Creates (and defines) function <FUNCTION_NAME>, variable mCached_<FUNCTION_NAME>,
#   and function (custom defined) get_<FUNCTION_NAME>


# *** CONTEXT ***

@ContextBlock
    cpub baseContext(ContextPtr parentContext) -> ContextPtr

    #fpub getTraits(ContextPtr parentContext) -> ContextPtr
    #fpub getDefinedContext(ContextPtr parentContext) -> ContextPtr

    #vprot savedTraits -> ContextPtr = nullptr
    #vprot savedContext -> ContextPtr = nullptr

@Description

@Requirement
    parent Description

@Inclusion
    parent Description

@TraitSpecifier
    parent Description


# *** STATEMENTS ***

@Statement
    parent Description

@MemberDecl
    parent Statement

@Definition
    parent Statement

@Change
    parent Statement

@IfStat
    parent Statement

@LoopStat
    parent Statement

@LoopStatPart

@TimesLoopStatPart
    parent LoopStatPart

@ForLoopStatPart
    parent LoopStatPart

@WhileLoopStatPart
    parent LoopStatPart


@JumpStat
    parent Statement

@WithStat
    parent Statement

@BreakStat
    parent JumpStat

@ContinueStat
    parent JumpStat

@ReturnStat
    parent JumpStat

@YieldStat
    parent JumpStat



# *** EXPRESSIONS ***

@Expression
    parent Statement

    cpub value(ContextPtr parentContext) -> Value

@ExprBinaryL2R
    parent Expression

@ExprLUnary
    parent Expression

@ExprRUnary
    parent Expression

@TightExpr
    parent Expression

@LogicalExpr
    parent Expression

@ExprPrefixFunction
    parent Expression

@RangeLiteral
    parent Expression

@Identifier
    parent Expression


# *** LITERALS ***

@Literal
    parent Expression

@FunctionLiteral
    parent Literal

@CoroutineLiteral
    parent Literal

@ContextExpressionLiteral
    parent Literal

@ValueLiteral
    parent Literal

@ModuleReference
    parent Literal

@ListLiteral
    parent Literal

@DictLiteral
    parent Literal

@SetLiteral
    parent Literal