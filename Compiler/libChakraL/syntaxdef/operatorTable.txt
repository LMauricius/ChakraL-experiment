# operators are defined like this:
# associativity('<' | '>') type('BINARY' | 'LUNARY' | 'RUNARY') productionName token|regex

@expr0

@expr1
> BINARY suffixFunction '.'

@expr2
> RUNARY suffixInc '++'
> RUNARY suffixDec '--'
< LUNARY copy 'new'
< BINARY prefixFunction ''

@expr3
< LUNARY prefixInc '++'
< LUNARY prefixDec '--'
< LUNARY plus '+'
< LUNARY minus '-'
< LUNARY logNot '!'

@expr4
> BINARY multiplication '*'
> BINARY crossProduct '×'
> BINARY dotProduct '⋅'
> BINARY division '/'
> BINARY divisionInt '/%'
> BINARY modulo '%'

@expr5
> BINARY addition '+'
> BINARY subtraction '-'

@expr6
> BINARY shiftL '<<'
> BINARY shiftR '>>'

@expr7
> BINARY compLess '<'
> BINARY compGreat '>'
> BINARY compLeEq '<='
> BINARY compGrEq '>='

@expr8
> BINARY compEqual '?='
> BINARY compNotEq '!='
> BINARY compAssigned '?->'
> BINARY compNotAss '!->'

@expr9
> BINARY logAnd '&'

@expr10
> BINARY logXOr '^'

@exprLeast
> BINARY logOr '|'